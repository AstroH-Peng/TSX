#!usr/bin/env python
# -*- coding: utf-8 -*-
#Modified date: 17/05/2016
#Nima 
#

import numpy as np
import scipy as sp

import PyKEP as pk

import motion

class TrajParser:
    """Class reading and returning the contents of a file of trajectory.

    The file should have as format a list of data without containing any 
    string. The class TrajParser uses following classes: Date, Position 
    and Velocity.
    Recovered data are:
    -d: represents an epoch (a fixed point in time)
    -p: the position vector of the spacecraft
    -v: the velocity vector of the spacecraft.

    """
    def parse_traj(self, trajectory_file):
	"""Method reading the contents of a specified trajectory file and 
	returning the data as a tuple of an epoch, an array of position 
	vector and an array of velocity vector.
	"""
	d = motion.Date()
	p = motion.Position()
	v = motion.Velocity()
	for line in trajectory_file.read().splitlines():
	    values = [float(element) for element in line.split(' ')]
	    d.date = pk.epoch(values[0], 'jd')
	    p.x = values[1]
	    p.y = values[2]
	    p.z = values[3]
	    v.vx = values[4]
	    v.vy = values[5]
	    v.vz = values[6]
	#pos = p.xyz_array() * 1000
	#vel = v.vxvyvz_array()
	return d.date, p.xyz_array() * 1000, v.vxvyvz_array() #pos, vel
